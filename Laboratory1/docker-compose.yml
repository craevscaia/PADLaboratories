version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - lab-network

  servicediscovery:
    build:
      context: ./ServiceDiscovery
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    networks:
      - lab-network
    depends_on:
      - redis
    environment:
      - CONFIG_MODE=docker

  apigateway:
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - lab-network
    depends_on:
      - servicediscovery
      - redis
    environment:
      - CONFIG_MODE=docker


  orderservice1:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5254:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - orderdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=orderservice1
  
  
  orderservice2:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5255:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - orderdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=orderservice2

  bookservice1:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    ports:
      - "5004:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - bookdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=bookservice1

  bookservice2:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    ports:
      - "5005:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - bookdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=bookservice2
        
  orderdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
    ports:
      - "5433:5432"
    volumes:
      - order-data:/var/lib/postgresql/data
    networks:
      - lab-network

  bookdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: book
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
    ports:
      - "5434:5432"
    volumes:
      - book-data:/var/lib/postgresql/data
    networks:
      - lab-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - orderservice1
      - orderservice2
      - bookservice1
      - bookservice2

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - lab-network
    volumes:
      - grafana-data:/var/lib/grafana


networks:
  lab-network:
    driver: bridge

volumes:
  order-data:
  book-data:
  grafana-data: