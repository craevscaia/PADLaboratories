version: '3.8'

services:
  redis-node1:
    image: "redis:latest"
    container_name: "redis-node1"
    user: "redis"
    command: redis-server --appendonly yes --cluster-enabled yes --cluster-config-file /usr/local/etc/redis/nodes.conf --cluster-node-timeout 5000 --port 6379
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data/node1:/usr/local/etc/redis
    networks:
      - lab-network

  redis-node2:
    image: "redis:latest"
    container_name: "redis-node2"
    user: "redis"
    command: redis-server --appendonly yes --cluster-enabled yes --cluster-config-file /usr/local/etc/redis/nodes.conf --cluster-node-timeout 5000 --port 6379
    volumes:
      - ./redis-data/node2:/usr/local/etc/redis
    networks:
      - lab-network

  redis-node3:
    image: "redis:latest"
    container_name: "redis-node3"
    user: "redis"
    command: redis-server --appendonly yes --cluster-enabled yes --cluster-config-file /usr/local/etc/redis/nodes.conf --cluster-node-timeout 5000 --port 6379
    volumes:
      - ./redis-data/node3:/usr/local/etc/redis
    networks:
      - lab-network

  servicediscovery:
    build:
      context: ./ServiceDiscovery
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    networks:
      - lab-network
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    environment:
      - CONFIG_MODE=docker

  apigateway:
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - lab-network
    depends_on:
      - servicediscovery
      - redis-node1
      - redis-node2
      - redis-node3
    environment:
      - CONFIG_MODE=docker


  orderservice:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    ports:
      - "5254:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - orderdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=orderservice

  bookservice:
    build:
      context: ./BookService
      dockerfile: Dockerfile
    ports:
      - "5004:80"
    networks:
      - lab-network
    depends_on:
      - apigateway
      - bookdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Deploy
      - SERVICE_NAME=bookservice

  orderdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - order-data:/var/lib/postgresql/data
    networks:
      - lab-network

  bookdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: book
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - book-data:/var/lib/postgresql/data
    networks:
      - lab-network

networks:
  lab-network:
    driver: bridge

volumes:
  order-data:
  book-data: